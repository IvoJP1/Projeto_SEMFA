<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>